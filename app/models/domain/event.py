from enum import Enum
from sqlalchemy import Column, Integer, String, Enum as SQLAEnum, ForeignKey, DateTime, LargeBinary
from sqlalchemy.orm import relationship
from datetime import datetime
from app.db.database import Base


class EventType(str, Enum):
    TRAINING = "Entrenamiento"
    RIDE = "Rodada"


class EventLevel(str, Enum):
    BASIC = "B치sico"
    INTERMEDIATE = "Intermedio"
    ADVANCED = "Avanzado"


class EventMode(str, Enum):
    MOUNTAIN = "Monta침a"
    ROAD = "Carretera"


class Event(Base):
    __tablename__ = "event"

    id = Column(Integer, primary_key=True, index=True)
    event_type = Column(SQLAEnum(EventType), nullable=False)
    route_id = Column(Integer, ForeignKey("route.id", ondelete="CASCADE"), nullable=False)
    meeting_point = Column(String(255), nullable=False)
    creation_date = Column(DateTime, default=datetime.utcnow)
    event_level = Column(SQLAEnum(EventLevel), nullable=False)
    event_mode = Column(SQLAEnum(EventMode), nullable=False)
    image = Column(LargeBinary, nullable=True)

    # Relaci칩n con Route
    route = relationship("Route", back_populates="events")

    # Relaci칩n con EventParticipant
    participants = relationship("EventParticipant", back_populates="event", cascade="all, delete")
